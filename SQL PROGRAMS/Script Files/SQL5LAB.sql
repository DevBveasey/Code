--------------------------------------------------------------------
-- Script Name:		SQL5LAB
-- Developer:       	Brandon Veasey
-- Creation Date:	10/11/2016
-- Description:   	Multiple Table Queries (Joining Tables)
--------------------------------------------------------------------

-- *****************************************************************
-- TAL Distributors – Generate Query Results (Join Tables)
-- *****************************************************************

-- 1.
SELECT ORDER_NUM, ORDER_DATE, CUSTOMERS.CUSTOMER_NUM, CUSTOMER_NAME
FROM BVEASEY.ORDERS, BVEASEY.CUSTOMERS
WHERE CUSTOMERS.CUSTOMER_NUM = ORDERS.CUSTOMER_NUM;

-- 2.
SELECT ORDER_NUM, ORDER_DATE, CUSTOMERS.CUSTOMER_NUM, CUSTOMER_NAME
FROM BVEASEY.ORDERS, BVEASEY.CUSTOMERS
WHERE CUSTOMERS.CUSTOMER_NUM = ORDERS.CUSTOMER_NUM
AND ORDER_DATE = '2015-10-15';

-- 3.
SELECT ORDERS.ORDER_NUM, ORDER_DATE, ITEM_NUM, NUM_ORDERED, QUOTED_PRICE, (QUOTED_PRICE * NUM_ORDERED)
AS TOTAL_COST
FROM BVEASEY.ORDERS, BVEASEY.ORDER_LINE
WHERE ORDERS.ORDER_NUM = ORDER_LINE.ORDER_NUM
AND NUM_ORDERED IS NOT NULL;

-- 4.
SELECT CUSTOMER_NUM, CUSTOMER_NAME
FROM BVEASEY.CUSTOMERS
WHERE CUSTOMER_NUM IN
	(SELECT CUSTOMER_NUM
	FROM BVEASEY.ORDERS
	WHERE ORDER_DATE = '2015-10-15');

-- 5.
SELECT CUSTOMER_NUM, CUSTOMER_NAME
FROM BVEASEY.CUSTOMERS
WHERE EXISTS
	( SELECT *
	FROM BVEASEY.ORDERS
	WHERE CUSTOMERS.CUSTOMER_NUM = ORDERS.CUSTOMER_NUM
	AND ORDER_DATE = '2015-10-15');

-- 6.
SELECT CUSTOMER_NUM, CUSTOMER_NAME
FROM BVEASEY.CUSTOMERS
WHERE CUSTOMER_NUM NOT IN
	(SELECT CUSTOMER_NUM
	FROM BVEASEY.ORDERS
	WHERE ORDER_DATE = '2015-10-15');

-- 7.
SELECT ORDERS.ORDER_NUM, ORDER_DATE, ITEM.ITEM_NUM, DESCRIPTION, CATEGORY
FROM BVEASEY.ORDERS, BVEASEY.ITEM,BVEASEY.ORDER_LINE
WHERE ORDERS.ORDER_NUM = ORDER_LINE.ORDER_NUM
AND ITEM.ITEM_NUM = ORDER_LINE.ITEM_NUM;

-- 8.
SELECT ORDERS.ORDER_NUM, ORDER_DATE, ITEM.ITEM_NUM, DESCRIPTION, CATEGORY
FROM BVEASEY.ORDERS, BVEASEY.ITEM,BVEASEY.ORDER_LINE
WHERE ORDERS.ORDER_NUM = ORDER_LINE.ORDER_NUM
AND ITEM.ITEM_NUM = ORDER_LINE.ITEM_NUM
ORDER BY CATEGORY, ORDER_NUM;

-- 9.
SELECT REP_NUM, LAST_NAME, FIRST_NAME
FROM BVEASEY.REP
WHERE REP_NUM IN
	(SELECT REP_NUM
	FROM BVEASEY.CUSTOMERS
	WHERE CREDIT_LIMIT = 10000);

-- 10.
SELECT DISTINCT(REP.REP_NUM), LAST_NAME, FIRST_NAME
FROM BVEASEY.REP, BVEASEY.CUSTOMERS
WHERE  REP.REP_NUM = CUSTOMERS.REP_NUM
AND CREDIT_LIMIT = 10000;

-- 11.
SELECT CUSTOMERS.CUSTOMER_NUM, CUSTOMER_NAME, DESCRIPTION
FROM BVEASEY.CUSTOMERS, BVEASEY.ITEM, BVEASEY.ORDER_LINE, BVEASEY.ORDERS
WHERE CUSTOMERS.CUSTOMER_NUM = ORDERS.CUSTOMER_NUM
 AND ORDERS.ORDER_NUM = ORDER_LINE.ORDER_NUM
 AND ORDER_LINE.ITEM_NUM = ITEM.ITEM_NUM
 AND ITEM.ITEM_NUM = 'FD11';

-- 12.
SELECT FST.ITEM_NUM, FST.DESCRIPTION, FST.CATEGORY,SEC.ITEM_NUM, SEC.DESCRIPTION, SEC.CATEGORY
FROM BVEASEY.ITEM FST,BVEASEY.ITEM SEC
WHERE FST.ITEM_NUM <> SEC.ITEM_NUM
AND FST.CATEGORY = SEC.CATEGORY
AND FST.ITEM_NUM < SEC.ITEM_NUM
ORDER BY FST.CATEGORY, SEC.CATEGORY;

-- 13.
SELECT ORDER_NUM, ORDER_DATE, CUSTOMER_NAME
FROM BVEASEY.CUSTOMERS, BVEASEY.ORDERS
WHERE CUSTOMERS.CUSTOMER_NUM = ORDERS.CUSTOMER_NUM
AND CUSTOMERS.CUSTOMER_NUM = 386;

-- 14.
SELECT ORDERS.ORDER_NUM, ORDER_DATE, DESCRIPTION
FROM BVEASEY.ITEM, BVEASEY.ORDERS, BVEASEY.ORDER_LINE
WHERE ORDERS.ORDER_NUM = ORDER_LINE.ORDER_NUM
AND ORDER_LINE.ITEM_NUM = ITEM.ITEM_NUM
AND ORDER_LINE.ITEM_NUM = 'TW35';
	
-- 15.
SELECT ORDER_NUM, ORDER_DATE
FROM BVEASEY.ORDERS
WHERE CUSTOMER_NUM = 586
UNION
SELECT ORDERS.ORDER_NUM, ORDER_DATE
FROM BVEASEY.ORDERS, BVEASEY.ORDER_LINE
WHERE ORDERS.ORDER_NUM = ORDER_LINE.ORDER_NUM
AND ORDER_LINE.ITEM_NUM = 'TW35';

-- 16.
SELECT ORDER_NUM, ORDER_DATE
FROM BVEASEY.ORDERS
WHERE CUSTOMER_NUM = 586
AND ORDER_NUM IN
	(SELECT ORDER_NUM
	FROM BVEASEY.ORDER_LINE
	WHERE ITEM_NUM = 'TW35');

-- 17.
SELECT ORDER_NUM, ORDER_DATE
FROM BVEASEY.ORDERS
WHERE CUSTOMER_NUM = 586
AND ORDER_NUM NOT IN
	(SELECT ORDER_NUM
	FROM BVEASEY.ORDER_LINE
	WHERE ITEM_NUM = 'TW35');

-- 18.
SELECT ITEM_NUM, DESCRIPTION, PRICE, CATEGORY
FROM BVEASEY.ITEM
WHERE PRICE > ALL
	(SELECT PRICE
	FROM BVEASEY.ITEM
	WHERE CATEGORY = 'GME');

-- 19.
SELECT ITEM.ITEM_NUM, DESCRIPTION, ON_HAND, CATEGORY, ORDER_NUM, NUM_ORDERED
FROM BVEASEY.ITEM
LEFT JOIN BVEASEY.ORDER_LINE
ON ITEM.ITEM_NUM = ORDER_LINE.ITEM_NUM
WHERE NUM_ORDERED IS NOT NULL
ORDER BY  ITEM_NUM;

-- *****************************************************************
-- Colonial Adventure Tours – Generate Query Results (Join Tables)
-- *****************************************************************

-- 20.
SELECT RESERVATION_ID, TRIP_ID, CUSTOMER.CUSTOMER_NUM, LAST_NAME
FROM BVEASEY.RESERVATION, BVEASEY.CUSTOMER
WHERE CUSTOMER.CUSTOMER_NUM = RESERVATION.CUSTOMER_NUM
ORDER BY LAST_NAME;

-- 21.
SELECT RESERVATION_ID, TRIP_ID, NUM_PERSONS, FIRST_NAME, LAST_NAME
FROM BVEASEY.RESERVATION, BVEASEY.CUSTOMER
WHERE CUSTOMER.CUSTOMER_NUM = RESERVATION.CUSTOMER_NUM
AND CUSTOMER.CUSTOMER_NUM = 104;

-- 22.
SELECT TRIP_NAME, FIRST_NAME, LAST_NAME
FROM BVEASEY.TRIP, BVEASEY.GUIDE, BVEASEY.TRIP_GUIDES
WHERE TRIP.TRIP_ID = TRIP_GUIDES.TRIP_ID
AND GUIDE.GUIDE_NUM = TRIP_GUIDES.GUIDE_NUM
AND GUIDE.GUIDE_NUM = 'AM01';

-- 23.
SELECT TRIP_NAME, TYPE, FIRST_NAME, LAST_NAME
FROM BVEASEY.TRIP, BVEASEY.GUIDE, BVEASEY.TRIP_GUIDES
WHERE TRIP.TRIP_ID = TRIP_GUIDES.TRIP_ID
AND GUIDE.GUIDE_NUM = TRIP_GUIDES.GUIDE_NUM
AND GUIDE.GUIDE_NUM = 'BR01'
AND TRIP.TYPE = 'BIKING';

-- 24.
SELECT LAST_NAME, TRIP_NAME, START_LOCATION, TRIP_DATE
FROM BVEASEY.CUSTOMER, BVEASEY.TRIP, BVEASEY.RESERVATION
WHERE CUSTOMER.CUSTOMER_NUM = RESERVATION.CUSTOMER_NUM
AND RESERVATION.TRIP_ID = TRIP.TRIP_ID
AND TRIP_DATE = '07-23-2016';

-- 25.
SELECT RESERVATION_ID, TRIP_ID, TRIP_DATE
FROM BVEASEY.RESERVATION
WHERE TRIP_ID IN
	(SELECT TRIP_ID
	FROM BVEASEY.TRIP
	WHERE STATE = 'ME');

-- 26.
SELECT RESERVATION_ID, TRIP_ID, TRIP_DATE
FROM BVEASEY.RESERVATION
WHERE EXISTS
	(SELECT *
	FROM BVEASEY.TRIP
	WHERE TRIP.TRIP_ID = RESERVATION.TRIP_ID
	AND STATE = 'ME');

-- 27.
SELECT LAST_NAME, FIRST_NAME, TYPE
FROM BVEASEY.GUIDE, BVEASEY.TRIP, BVEASEY.TRIP_GUIDES
WHERE GUIDE.GUIDE_NUM = TRIP_GUIDES.GUIDE_NUM
AND TRIP.TRIP_ID = TRIP_GUIDES.TRIP_ID
AND TYPE = 'Paddling';

-- 28.
SELECT LAST_NAME, FIRST_NAME, TYPE
FROM BVEASEY.GUIDE GU, BVEASEY.TRIP TP, BVEASEY.TRIP_GUIDES TG
WHERE GU.GUIDE_NUM = TG.GUIDE_NUM
AND TP.TRIP_ID = TG.TRIP_ID
AND TYPE = 'Paddling';

-- 29.
SELECT FST.TRIP_ID, FST.TRIP_NAME, SEC.TRIP_ID, SEC.TRIP_NAME, FST.START_LOCATION
FROM BVEASEY.TRIP FST, BVEASEY.TRIP SEC
WHERE FST.START_LOCATION = SEC.START_LOCATION
AND FST.TRIP_ID < SEC.TRIP_ID
ORDER BY FST.TRIP_ID, SEC.TRIP_ID;

-- 30.
SELECT TRIP_NAME, TYPE
FROM BVEASEY.TRIP TP, BVEASEY.RESERVATION RES
WHERE TP.TRIP_ID = RES.TRIP_ID
AND TYPE = 'Hiking'
ORDER BY TRIP_NAME;

-- 31.
SELECT CUSTOMER_NUM, LAST_NAME, STATE
FROM BVEASEY.CUSTOMER
WHERE STATE = 'NJ'
UNION
SELECT CUSTOMER.CUSTOMER_NUM, LAST_NAME, STATE
FROM BVEASEY.CUSTOMER, BVEASEY.RESERVATION
WHERE CUSTOMER.CUSTOMER_NUM = RESERVATION.CUSTOMER_NUM;

-- 32.
SELECT CUSTOMER_NUM, LAST_NAME, STATE
FROM BVEASEY.CUSTOMER
WHERE STATE = 'NJ'
INTERSECT
SELECT CUSTOMER.CUSTOMER_NUM, LAST_NAME, STATE
FROM BVEASEY.CUSTOMER, BVEASEY.RESERVATION
WHERE CUSTOMER.CUSTOMER_NUM = RESERVATION.CUSTOMER_NUM;

-- 33.
SELECT TRIP_ID, TRIP_NAME, TYPE
FROM BVEASEY.TRIP
WHERE MAX_GRP_SIZE > ALL
	(SELECT MAX_GRP_SIZE
	FROM BVEASEY.TRIP
	WHERE TYPE = 'Hiking');

-- 34.
SELECT TRIP_ID, TRIP_NAME, TYPE
FROM BVEASEY.TRIP
WHERE MAX_GRP_SIZE > any
	(SELECT MAX_GRP_SIZE
	FROM BVEASEY.TRIP
	WHERE TYPE = 'Biking');

-- 35.
SELECT TP.TRIP_ID, TRIP_NAME, RESERVATION_ID
FROM BVEASEY.TRIP TP
LEFT JOIN BVEASEY.RESERVATION RN
ON TP.TRIP_ID = RN.TRIP_ID
WHERE RESERVATION_ID IS NOT NULL
ORDER BY TP.TRIP_ID;

-- 36.
SELECT TRIP_ID, GU.GUIDE_NUM, LAST_NAME, FIRST_NAME
FROM BVEASEY.TRIP_GUIDES TG, BVEASEY.GUIDE GU
WHERE TG.GUIDE_NUM = GU.GUIDE_NUM
ORDER BY LAST_NAME, TRIP_ID DESC;
